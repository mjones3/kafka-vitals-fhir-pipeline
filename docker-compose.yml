version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    user: root                                # run as root so it can create its data/log dirs
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAMES: INSIDE,OUTSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9093:9093"
      - "9094:9094"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - kafka_network
    volumes:
      - kafka-data:/var/lib/kafka
    entrypoint: /etc/confluent/docker/run

  kafka-manager:
    image: hlebalbau/kafka-manager:latest
    environment:
      ZK_HOSTS: "zookeeper:2181"
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    networks:
      - kafka_network

  random-vitals-producer:
    build:
      context: ./apps/producers/random-vitals-producer
      dockerfile: Dockerfile
    container_name: random-vitals-producer
    restart: unless-stopped
    environment:
      KAFKA_BROKER:      "kafka:9093"
      KAFKA_TOPIC:       "vitals"
      PATIENT_ID:        "p010124"
      # optional overrides:
      # START_TIME:       "2025-05-10T00:00:00.000Z"
      # INTERVAL_MS:      "10"
      # LOG_INTERVAL:     "5000"
    depends_on:
      - kafka
    networks:
      - kafka_network

  fhir-consumer:
    build:
      context: ./apps/consumers/vital-hl7
      dockerfile: Dockerfile
    container_name: fhir-consumer
    restart: unless-stopped
    environment:
      # Kafka
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9093"
      KAFKA_TOPIC: "vitals"
      CONSUMER_GROUP: "vitals-fhir-consumers"
      # MongoDB
      MONGO_URI: "mongodb://admin:s3cr3tPassw0rd@mongo:27017/admin"
      MONGO_DB: "ehr"
      MONGO_COLLECTION: "observations"
    depends_on:
      - kafka
      - mongo
    networks:
      - kafka_network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: s3cr3tPassw0rd
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    networks:
      - kafka_network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://admin:s3cr3tPassw0rd@mongo:27017/admin"
    ports:
      - 8081:8081
    depends_on:
      - mongo
    networks:
      - kafka_network

networks:
  kafka_network:
    driver: bridge

volumes:
  kafka-data:
  influxdb-data:
  zookeeper-data:
  zookeeper-log:
  mongo-data:
